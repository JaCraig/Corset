{
  "api/Corset.BaseClasses.CompressorBase.html": {
    "href": "api/Corset.BaseClasses.CompressorBase.html",
    "title": "Class CompressorBase | Corset API Reference",
    "keywords": "Class CompressorBase Namespace Corset.BaseClasses Assembly Corset.dll Compressor base class public abstract class CompressorBase : ICompressor Inheritance object CompressorBase Implements ICompressor Derived DeflateCompressor GZipCompressor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CompressorBase() Constructor protected CompressorBase() Properties Name Compressor name public abstract string Name { get; } Property Value string Methods Compress(byte[]) Compresses the byte array public byte[] Compress(byte[] data) Parameters data byte[] Data to compress Returns byte[] Compressed data Decompress(byte[]) Decompresses the data public byte[] Decompress(byte[] data) Parameters data byte[] Data to decompress Returns byte[] The decompressed data GetStream(MemoryStream, CompressionMode) Gets the stream used to compress/decompress the data protected abstract Stream GetStream(MemoryStream stream, CompressionMode compressionMode) Parameters stream MemoryStream Memory stream used compressionMode CompressionMode Compression mode Returns Stream The stream used to compress/decompress the data"
  },
  "api/Corset.BaseClasses.html": {
    "href": "api/Corset.BaseClasses.html",
    "title": "Namespace Corset.BaseClasses | Corset API Reference",
    "keywords": "Namespace Corset.BaseClasses Classes CompressorBase Compressor base class"
  },
  "api/Corset.Corset.html": {
    "href": "api/Corset.Corset.html",
    "title": "Class Corset | Corset API Reference",
    "keywords": "Class Corset Namespace Corset Assembly Corset.dll Main class used to interact with the compression system public class Corset Inheritance object Corset Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Corset(IEnumerable<ICompressor>) Initializes a new instance of the Corset class. public Corset(IEnumerable<ICompressor> compressors) Parameters compressors IEnumerable<ICompressor> The compressors. Properties Compressors Gets or sets the compressors. public IDictionary<string, ICompressor> Compressors { get; } Property Value IDictionary<string, ICompressor> The compressors. Methods Compress(byte[], CompressorType) Compresses the data public byte[]? Compress(byte[] data, CompressorType compressor) Parameters data byte[] The data. compressor CompressorType The compressor. Returns byte[] The compressed data Decompress(byte[], CompressorType) Decompresses the data public byte[]? Decompress(byte[] data, CompressorType compressor) Parameters data byte[] Data to decompress compressor CompressorType Compressor name Returns byte[] The decompressed data ToString() String info for the manager public override string ToString() Returns string The string info that the manager contains"
  },
  "api/Corset.Default.DeflateCompressor.html": {
    "href": "api/Corset.Default.DeflateCompressor.html",
    "title": "Class DeflateCompressor | Corset API Reference",
    "keywords": "Class DeflateCompressor Namespace Corset.Default Assembly Corset.dll Deflate compressor public class DeflateCompressor : CompressorBase, ICompressor Inheritance object CompressorBase DeflateCompressor Implements ICompressor Inherited Members CompressorBase.Compress(byte[]) CompressorBase.Decompress(byte[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name Name public override string Name { get; } Property Value string Methods GetStream(MemoryStream, CompressionMode) Gets the stream protected override Stream GetStream(MemoryStream stream, CompressionMode compressionMode) Parameters stream MemoryStream Memory stream compressionMode CompressionMode Compression mode Returns Stream The compressor stream"
  },
  "api/Corset.Default.GZipCompressor.html": {
    "href": "api/Corset.Default.GZipCompressor.html",
    "title": "Class GZipCompressor | Corset API Reference",
    "keywords": "Class GZipCompressor Namespace Corset.Default Assembly Corset.dll GZip compressor public class GZipCompressor : CompressorBase, ICompressor Inheritance object CompressorBase GZipCompressor Implements ICompressor Inherited Members CompressorBase.Compress(byte[]) CompressorBase.Decompress(byte[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name Name public override string Name { get; } Property Value string Methods GetStream(MemoryStream, CompressionMode) Gets the stream protected override Stream GetStream(MemoryStream stream, CompressionMode compressionMode) Parameters stream MemoryStream Memory stream compressionMode CompressionMode Compression mode Returns Stream The compressor stream"
  },
  "api/Corset.Default.html": {
    "href": "api/Corset.Default.html",
    "title": "Namespace Corset.Default | Corset API Reference",
    "keywords": "Namespace Corset.Default Classes DeflateCompressor Deflate compressor GZipCompressor GZip compressor"
  },
  "api/Corset.Enums.CompressorType.html": {
    "href": "api/Corset.Enums.CompressorType.html",
    "title": "Class CompressorType | Corset API Reference",
    "keywords": "Class CompressorType Namespace Corset.Enums Assembly Corset.dll Defines the compressor types in an enum like static class public class CompressorType Inheritance object CompressorType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CompressorType(string) Initializes a new instance of the CompressorType class. protected CompressorType(string name) Parameters name string The name. Properties Deflate Gets the deflate compressor type. public static CompressorType Deflate { get; } Property Value CompressorType The deflate compressor type. GZip Gets the GZip compressor type. public static CompressorType GZip { get; } Property Value CompressorType The GZip compressor type. Methods ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators explicit operator CompressorType(string) Performs an explicit conversion from string to CompressorType. public static explicit operator CompressorType(string compressorType) Parameters compressorType string Type of the compressor. Returns CompressorType The result of the conversion. implicit operator string(CompressorType) Performs an explicit conversion from CompressorType to string. public static implicit operator string(CompressorType compressorType) Parameters compressorType CompressorType Type of the compressor. Returns string The result of the conversion."
  },
  "api/Corset.Enums.html": {
    "href": "api/Corset.Enums.html",
    "title": "Namespace Corset.Enums | Corset API Reference",
    "keywords": "Namespace Corset.Enums Classes CompressorType Defines the compressor types in an enum like static class"
  },
  "api/Corset.Interfaces.ICompressor.html": {
    "href": "api/Corset.Interfaces.ICompressor.html",
    "title": "Interface ICompressor | Corset API Reference",
    "keywords": "Interface ICompressor Namespace Corset.Interfaces Assembly Corset.dll Compressor interface public interface ICompressor Properties Name Compressor name string Name { get; } Property Value string Methods Compress(byte[]) Compresses the data byte[] Compress(byte[] data) Parameters data byte[] Data to compress Returns byte[] Compressed data Decompress(byte[]) Decompresses the data byte[] Decompress(byte[] data) Parameters data byte[] Data to decompress Returns byte[] The decompressed data"
  },
  "api/Corset.Interfaces.html": {
    "href": "api/Corset.Interfaces.html",
    "title": "Namespace Corset.Interfaces | Corset API Reference",
    "keywords": "Namespace Corset.Interfaces Interfaces ICompressor Compressor interface"
  },
  "api/Corset.Module.CorsetModule.html": {
    "href": "api/Corset.Module.CorsetModule.html",
    "title": "Class CorsetModule | Corset API Reference",
    "keywords": "Class CorsetModule Namespace Corset.Module Assembly Corset.dll Corset's IoC module public class CorsetModule : IModule Inheritance object CorsetModule Implements IModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order Order to run this in public int Order { get; } Property Value int Methods Load(IServiceCollection?) Loads the module using the bootstrapper public void Load(IServiceCollection? bootstrapper) Parameters bootstrapper IServiceCollection The bootstrapper. See Also IModule"
  },
  "api/Corset.Module.html": {
    "href": "api/Corset.Module.html",
    "title": "Namespace Corset.Module | Corset API Reference",
    "keywords": "Namespace Corset.Module Classes CorsetModule Corset's IoC module"
  },
  "api/Corset.html": {
    "href": "api/Corset.html",
    "title": "Namespace Corset | Corset API Reference",
    "keywords": "Namespace Corset Classes Corset Main class used to interact with the compression system"
  },
  "api/Microsoft.Extensions.DependencyInjection.Registration.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.Registration.html",
    "title": "Class Registration | Corset API Reference",
    "keywords": "Class Registration Namespace Microsoft.Extensions.DependencyInjection Assembly Corset.dll Registration extension methods public static class Registration Inheritance object Registration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterCorset(ICanisterConfiguration?) Registers the aspectus library with the bootstrapper. public static ICanisterConfiguration? RegisterCorset(this ICanisterConfiguration? bootstrapper) Parameters bootstrapper ICanisterConfiguration The bootstrapper. Returns ICanisterConfiguration The bootstrapper"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | Corset API Reference",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes Registration Registration extension methods"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Welcome | Corset API Reference",
    "keywords": "Welcome Welcome to the API browser."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Code | Corset API Reference",
    "keywords": "Code using Microsoft.Extensions.DependencyInjection; namespace Corset.Example { /// <summary> /// This is a simple example of how to use Corset /// </summary> internal class Program { /// <summary> /// Defines the entry point of the application. /// </summary> /// <param name=\"args\">The arguments.</param> private static void Main(string[] args) { // Set up the DI container and make sure to call AddCanisterModules() to load all of the modules that are part of Corset var SeviceProvider = new ServiceCollection().AddCanisterModules()?.BuildServiceProvider(); // This is the data that we want to compress const string Data = \"This is a bit of data that I want to compress\"; // Compress the data using the default compressor var CompressedData = Data.Compress(); Console.WriteLine(CompressedData); // Decompress the data using the default compressor var DecompressedData = CompressedData.Decompress(); Console.WriteLine(DecompressedData); } } } Output CsnILFYAokSFpMwShfw0hZTEkkSFkozEEgVPhfLEvBKFknyF5PzcgqLU4mIAAAAA//8= This is a bit of data that I want to compress"
  },
  "index.html": {
    "href": "index.html",
    "title": "Corset | Corset API Reference",
    "keywords": "Corset Corset is a library designed to simplify compression in .Net. By default it supports Deflate and GZip but can be expanded upon to support other types of compression. Basic Usage uses a library called Canister for registering itself in your ServiceCollection: servicecollection.AddCanisterModules(); This line is required prior to using the extension methods for the first time. Once Canister is set up, you can call the extension methods provided: string Data = \"This is a bit of data that I want to compress\"; string CompressedBase64String = Data.Compress(); The Compress extension method works on both strings and byte arrays. It will also allow you to specify which Encoding the string is using. By default it assumes a UTF8 encoding but this can be set as one of the parameters. The result from the Compress function will be either a Base64 string if it was called on a string or a byte array if you called the function on a byte array. In order to Decompress the data, you simply call the Decompress extension method: string CompressedData = \"This is a bit of data that I want to compress\".Compress(); string DecompressedData = CompressedData.Decompress(); Like the Compress extension, this method works on both strings and byte arrays. It allows you to specify which Encoding the string you want back should be in, if called on a string. By default it assumes a UTF8 encoding. The result from the Decompress function is either a string if called on a string, or a byte array if called on a byte array. Adding Compression Types The system loads the compressors at the beginning when Canister is initialized. In order to add your own compression type simply implement the ICompressor interface and pass the assembly it resides in to the Canister initialization line along with the Corset assembly. You may also wish to look at the CompressorBase class as it has some of the code needed already written and just requires you to write a Stream to do the actual compression. Installation The library is available via Nuget with the package name \"Corset\". To install it run the following command in the Package Manager Console: Install-Package Corset Build Process In order to build the library you will require the following as a minimum: Visual Studio 2022 Other than that, just clone the project and you should be able to load the solution and build without too much effort."
  }
}